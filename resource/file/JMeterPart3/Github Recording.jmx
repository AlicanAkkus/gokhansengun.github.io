<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <stringProp name="CookieManager.policy">standard</stringProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="126 /" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="126 /" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="142 /github/page_view" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="dimensions[page]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[page]</stringProp>
                    <stringProp name="Argument.value">https://github.com/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[title]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[title]</stringProp>
                    <stringProp name="Argument.value">How people build software Â· GitHub</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[referrer]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[referrer]</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_agent]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_agent]</stringProp>
                    <stringProp name="Argument.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[screen_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[screen_resolution]</stringProp>
                    <stringProp name="Argument.value">1680x1050</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[pixel_ratio]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[pixel_ratio]</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[browser_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[browser_resolution]</stringProp>
                    <stringProp name="Argument.value">1463x883</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[tz_seconds]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[tz_seconds]</stringProp>
                    <stringProp name="Argument.value">10800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[timestamp]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[timestamp]</stringProp>
                    <stringProp name="Argument.value">1470429000187</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[request_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[request_id]</stringProp>
                    <stringProp name="Argument.value">4EACFBCF:1029:FBD5153:57A4F745</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="measures[performance_timing]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">measures[performance_timing]</stringProp>
                    <stringProp name="Argument.value">1-172-160--2730-2730-2729-997-157-157-157---0---172-996-994-161--</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[cid]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[cid]</stringProp>
                    <stringProp name="Argument.value">1993415879.1470429000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">collector.githubapp.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/github/page_view</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="145 /_private/browser/stats" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/_private/browser/stats</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="146 /_private/browser/stats" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;browserfeatures&quot;:{&quot;classlist_multi_arg&quot;:true,&quot;classlist&quot;:true,&quot;closest&quot;:true,&quot;custom_elements&quot;:true,&quot;custom_event&quot;:true,&quot;emoji&quot;:true,&quot;emoji_unicode_6&quot;:true,&quot;emoji_unicode_7&quot;:true,&quot;emoji_unicode_8&quot;:true,&quot;emoji_unicode_9&quot;:false,&quot;fetch&quot;:true,&quot;matches&quot;:true,&quot;performance_getentries&quot;:true,&quot;performance_mark&quot;:true,&quot;performance_now&quot;:true,&quot;promise&quot;:true,&quot;send_beacon&quot;:true,&quot;string_ends_with&quot;:true,&quot;string_starts_with&quot;:true,&quot;timezone&quot;:true,&quot;url&quot;:true,&quot;url_search_params&quot;:true,&quot;weakmap&quot;:true}},{&quot;downloadedbundles&quot;:[&quot;frameworks.js&quot;,&quot;github.js&quot;,&quot;frameworks.css&quot;,&quot;github.css&quot;,&quot;site.css&quot;]},{&quot;timing&quot;:{&quot;crossBrowserLoadEvent&quot;:1470429001231,&quot;navigationStart&quot;:1470428997325,&quot;unloadEventStart&quot;:0,&quot;unloadEventEnd&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1470428997482,&quot;domainLookupStart&quot;:1470428997482,&quot;domainLookupEnd&quot;:1470428997482,&quot;connectStart&quot;:1470428997485,&quot;connectEnd&quot;:1470428997497,&quot;secureConnectionStart&quot;:1470428997486,&quot;requestStart&quot;:1470428997497,&quot;responseStart&quot;:1470428998319,&quot;responseEnd&quot;:1470428998321,&quot;domLoading&quot;:1470428998322,&quot;domInteractive&quot;:1470429000054,&quot;domContentLoadedEventStart&quot;:1470429000055,&quot;domContentLoadedEventEnd&quot;:1470429000055,&quot;domComplete&quot;:1470429001227,&quot;loadEventStart&quot;:1470429001228,&quot;loadEventEnd&quot;:1470429001230,&quot;chromeFirstPaintTime&quot;:1470429000061},&quot;resources&quot;:[{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:999.4050000000001,&quot;domainLookupStart&quot;:999.4050000000001,&quot;domainLookupEnd&quot;:999.4050000000001,&quot;connectStart&quot;:999.9200000000001,&quot;connectEnd&quot;:1022.9050000000002,&quot;secureConnectionStart&quot;:1003.6200000000002,&quot;requestStart&quot;:1024.6000000000001,&quot;responseStart&quot;:2386.9900000000002,&quot;responseEnd&quot;:2391.8950000000004,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-97ee2b56367da9956f50d3e491994a8e1bf773ac7a65b29a1e3bdcf8b3f2f29a.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:999.4050000000001,&quot;duration&quot;:1392.4900000000002},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:999.585,&quot;domainLookupStart&quot;:999.585,&quot;domainLookupEnd&quot;:999.585,&quot;connectStart&quot;:1000.5500000000001,&quot;connectEnd&quot;:1024.375,&quot;secureConnectionStart&quot;:1003.5300000000001,&quot;requestStart&quot;:1024.5950000000003,&quot;responseStart&quot;:2331.8,&quot;responseEnd&quot;:2338.76,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-0264c6918a331ed8df89357faf8c0709ea6057c2a7976ee5272c0b1d56db1834.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:999.585,&quot;duration&quot;:1339.1750000000002},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:999.69,&quot;domainLookupStart&quot;:999.69,&quot;domainLookupEnd&quot;:999.69,&quot;connectStart&quot;:1000.2250000000001,&quot;connectEnd&quot;:1025.94,&quot;secureConnectionStart&quot;:1003.425,&quot;requestStart&quot;:1026.255,&quot;responseStart&quot;:2059.9800000000005,&quot;responseEnd&quot;:2061.2400000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/site-c31d97cdffdd1a140b356a16a2e2b37db7c98fa23ce2127f79a61bc338af1083.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:999.69,&quot;duration&quot;:1061.5500000000002},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:999.7850000000001,&quot;domainLookupStart&quot;:999.7850000000001,&quot;domainLookupEnd&quot;:999.7850000000001,&quot;connectStart&quot;:1001.5350000000001,&quot;connectEnd&quot;:1022.1450000000001,&quot;secureConnectionStart&quot;:1003.5000000000001,&quot;requestStart&quot;:1023.6100000000001,&quot;responseStart&quot;:2474.13,&quot;responseEnd&quot;:2481.5400000000004,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:999.7850000000001,&quot;duration&quot;:1481.7550000000003},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:999.8650000000001,&quot;domainLookupStart&quot;:999.8650000000001,&quot;domainLookupEnd&quot;:999.8650000000001,&quot;connectStart&quot;:1000.69,&quot;connectEnd&quot;:1022.5300000000002,&quot;secureConnectionStart&quot;:1003.255,&quot;requestStart&quot;:1024.015,&quot;responseStart&quot;:2300.19,&quot;responseEnd&quot;:2307.7650000000003,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:999.8650000000001,&quot;duration&quot;:1307.9},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:999.99,&quot;domainLookupStart&quot;:999.99,&quot;domainLookupEnd&quot;:999.99,&quot;connectStart&quot;:1000.955,&quot;connectEnd&quot;:1025.76,&quot;secureConnectionStart&quot;:1003.2400000000001,&quot;requestStart&quot;:1025.86,&quot;responseStart&quot;:2255.175,&quot;responseEnd&quot;:2257.465,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/universe-logo.png&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:999.99,&quot;duration&quot;:1257.4750000000001},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1002.075,&quot;domainLookupStart&quot;:1002.075,&quot;domainLookupEnd&quot;:1002.075,&quot;connectStart&quot;:2309.345,&quot;connectEnd&quot;:2311.525,&quot;secureConnectionStart&quot;:2309.81,&quot;requestStart&quot;:2311.5950000000003,&quot;responseStart&quot;:2850.135,&quot;responseEnd&quot;:2850.6400000000003,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-build.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1002.075,&quot;duration&quot;:1848.5650000000003},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1002.1600000000002,&quot;domainLookupStart&quot;:1002.1600000000002,&quot;domainLookupEnd&quot;:1002.1600000000002,&quot;connectStart&quot;:2392.71,&quot;connectEnd&quot;:2395.7300000000005,&quot;secureConnectionStart&quot;:2393.46,&quot;requestStart&quot;:2396.545,&quot;responseStart&quot;:3054.425,&quot;responseEnd&quot;:3054.9500000000003,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-work.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1002.1600000000002,&quot;duration&quot;:2052.79},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1002.24,&quot;domainLookupStart&quot;:1002.24,&quot;domainLookupEnd&quot;:1002.24,&quot;connectStart&quot;:2393.0350000000003,&quot;connectEnd&quot;:2396.1800000000003,&quot;secureConnectionStart&quot;:2393.6450000000004,&quot;requestStart&quot;:2396.635,&quot;responseStart&quot;:3042.6400000000003,&quot;responseEnd&quot;:3043.5350000000003,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-projects.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1002.24,&quot;duration&quot;:2041.2950000000003},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1002.3000000000002,&quot;domainLookupStart&quot;:1002.3000000000002,&quot;domainLookupEnd&quot;:1002.3000000000002,&quot;connectStart&quot;:2392.755,&quot;connectEnd&quot;:2396.4500000000003,&quot;secureConnectionStart&quot;:2393.2300000000005,&quot;requestStart&quot;:2396.61,&quot;responseStart&quot;:3057.395,&quot;responseEnd&quot;:3057.92,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-platform.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1002.3000000000002,&quot;duration&quot;:2055.62},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1002.37,&quot;domainLookupStart&quot;:1002.37,&quot;domainLookupEnd&quot;:1002.37,&quot;connectStart&quot;:3055.3700000000003,&quot;connectEnd&quot;:3057.29,&quot;secureConnectionStart&quot;:3055.795,&quot;requestStart&quot;:3057.6150000000002,&quot;responseStart&quot;:3863.0250000000005,&quot;responseEnd&quot;:3865.5600000000004,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/org_example_nasa.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1002.37,&quot;duration&quot;:2863.1900000000005},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1002.4300000000002,&quot;domainLookupStart&quot;:1002.4300000000002,&quot;domainLookupEnd&quot;:1002.4300000000002,&quot;connectStart&quot;:1002.4300000000002,&quot;connectEnd&quot;:1002.4300000000002,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1002.8050000000002,&quot;responseStart&quot;:2481.8900000000003,&quot;responseEnd&quot;:2482.54,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1002.4300000000002,&quot;duration&quot;:1480.1099999999997},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1002.4950000000001,&quot;domainLookupStart&quot;:1002.4950000000001,&quot;domainLookupEnd&quot;:1002.4950000000001,&quot;connectStart&quot;:1002.4950000000001,&quot;connectEnd&quot;:1002.4950000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:2257.55,&quot;responseStart&quot;:2308.0450000000005,&quot;responseEnd&quot;:2308.86,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1002.4950000000001,&quot;duration&quot;:1306.365},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2425.8650000000002,&quot;domainLookupStart&quot;:2425.8650000000002,&quot;domainLookupEnd&quot;:2425.8650000000002,&quot;connectStart&quot;:2426.2900000000004,&quot;connectEnd&quot;:2428.8050000000003,&quot;secureConnectionStart&quot;:2427.13,&quot;requestStart&quot;:2429.7200000000003,&quot;responseStart&quot;:3068.6250000000005,&quot;responseEnd&quot;:3069.1750000000006,&quot;name&quot;:&quot;https://assets-cdn.github.com/static/fonts/roboto/roboto-regular.woff&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2425.8650000000002,&quot;duration&quot;:643.3100000000004},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2426.6,&quot;domainLookupStart&quot;:2426.6,&quot;domainLookupEnd&quot;:2426.6,&quot;connectStart&quot;:2427.02,&quot;connectEnd&quot;:2429.2250000000004,&quot;secureConnectionStart&quot;:2427.455,&quot;requestStart&quot;:2429.88,&quot;responseStart&quot;:3104.4900000000002,&quot;responseEnd&quot;:3104.9200000000005,&quot;name&quot;:&quot;https://assets-cdn.github.com/static/fonts/roboto/roboto-medium.woff&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2426.6,&quot;duration&quot;:678.3200000000006},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2427.41,&quot;domainLookupStart&quot;:2427.41,&quot;domainLookupEnd&quot;:2427.41,&quot;connectStart&quot;:3044.35,&quot;connectEnd&quot;:3047.5750000000003,&quot;secureConnectionStart&quot;:3045.155,&quot;requestStart&quot;:3047.66,&quot;responseStart&quot;:3887.8950000000004,&quot;responseEnd&quot;:3902.5900000000006,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-hero.jpg?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2427.41,&quot;duration&quot;:1475.1800000000007},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2428.525,&quot;domainLookupStart&quot;:2428.525,&quot;domainLookupEnd&quot;:2428.525,&quot;connectStart&quot;:2429.3050000000003,&quot;connectEnd&quot;:2431.5350000000003,&quot;secureConnectionStart&quot;:2429.8700000000003,&quot;requestStart&quot;:2431.61,&quot;responseStart&quot;:3096.045,&quot;responseEnd&quot;:3097.01,&quot;name&quot;:&quot;https://assets-cdn.github.com/static/fonts/roboto/roboto-light.woff&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2428.525,&quot;duration&quot;:668.4850000000001},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2870.945,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:3637.1400000000003,&quot;name&quot;:&quot;https://www.google-analytics.com/r/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2870.945,&quot;duration&quot;:766.1950000000002},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2871.6150000000002,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:3822.245,&quot;name&quot;:&quot;https://collector.githubapp.com/github/page_view?dimensions[page]=https%3A%2F%2Fgithub.com%2F&amp;dimensions[title]=How%20people%20build%20software%20%C2%B7%20GitHub&amp;dimensions[referrer]=&amp;dimensions[user_agent]=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_11_6)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F52.0.2743.116%20Safari%2F537.36&amp;dimensions[screen_resolution]=1680x1050&amp;dimensions[pixel_ratio]=2&amp;dimensions[browser_resolution]=1463x883&amp;dimensions[tz_seconds]=10800&amp;dimensions[timestamp]=1470429000187&amp;dimensions[request_id]=4EACFBCF%3A1029%3AFBD5153%3A57A4F745&amp;&amp;measures[performance_timing]=1-172-160--2730-2730-2729-997-157-157-157---0---172-996-994-161--&amp;&amp;&amp;dimensions[cid]=1993415879.1470429000&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2871.6150000000002,&quot;duration&quot;:950.6299999999997}]}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/_private/browser/stats</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="149 /login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="149 /login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/login</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings"/>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Auth Token Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">the_auth_token</stringProp>
                <stringProp name="RegexExtractor.regex">name=&quot;authenticity_token&quot;.*value=&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not-found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="151 /github/page_view" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="dimensions[page]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[page]</stringProp>
                    <stringProp name="Argument.value">https://github.com/login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[title]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[title]</stringProp>
                    <stringProp name="Argument.value">Sign in to GitHub Â· GitHub</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[referrer]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[referrer]</stringProp>
                    <stringProp name="Argument.value">https://github.com/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[user_agent]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_agent]</stringProp>
                    <stringProp name="Argument.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[screen_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[screen_resolution]</stringProp>
                    <stringProp name="Argument.value">1680x1050</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[pixel_ratio]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[pixel_ratio]</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[browser_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[browser_resolution]</stringProp>
                    <stringProp name="Argument.value">1463x883</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[tz_seconds]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[tz_seconds]</stringProp>
                    <stringProp name="Argument.value">10800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[timestamp]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[timestamp]</stringProp>
                    <stringProp name="Argument.value">1470429011297</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[request_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[request_id]</stringProp>
                    <stringProp name="Argument.value">4EACFBCF:1027:F8E6AC7:57A4F752</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="measures[performance_timing]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">measures[performance_timing]</stringProp>
                    <stringProp name="Argument.value">1-8-6--1083-1082-1082-812-0-0-0---0---8-806-805-7-807-807</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[cid]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[cid]</stringProp>
                    <stringProp name="Argument.value">1993415879.1470429000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">collector.githubapp.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/github/page_view</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="152 /_private/browser/stats" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;browserfeatures&quot;:{&quot;classlist_multi_arg&quot;:true,&quot;classlist&quot;:true,&quot;closest&quot;:true,&quot;custom_elements&quot;:true,&quot;custom_event&quot;:true,&quot;emoji&quot;:true,&quot;emoji_unicode_6&quot;:true,&quot;emoji_unicode_7&quot;:true,&quot;emoji_unicode_8&quot;:true,&quot;emoji_unicode_9&quot;:false,&quot;fetch&quot;:true,&quot;matches&quot;:true,&quot;performance_getentries&quot;:true,&quot;performance_mark&quot;:true,&quot;performance_now&quot;:true,&quot;promise&quot;:true,&quot;send_beacon&quot;:true,&quot;string_ends_with&quot;:true,&quot;string_starts_with&quot;:true,&quot;timezone&quot;:true,&quot;url&quot;:true,&quot;url_search_params&quot;:true,&quot;weakmap&quot;:true}},{&quot;timing&quot;:{&quot;crossBrowserLoadEvent&quot;:1470429012325,&quot;navigationStart&quot;:1470429010103,&quot;unloadEventStart&quot;:1470429010910,&quot;unloadEventEnd&quot;:1470429010910,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1470429010103,&quot;domainLookupStart&quot;:1470429010103,&quot;domainLookupEnd&quot;:1470429010103,&quot;connectStart&quot;:1470429010109,&quot;connectEnd&quot;:1470429010111,&quot;secureConnectionStart&quot;:1470429010110,&quot;requestStart&quot;:1470429010111,&quot;responseStart&quot;:1470429010908,&quot;responseEnd&quot;:1470429010909,&quot;domLoading&quot;:1470429010915,&quot;domInteractive&quot;:1470429011185,&quot;domContentLoadedEventStart&quot;:1470429011185,&quot;domContentLoadedEventEnd&quot;:1470429011186,&quot;domComplete&quot;:1470429012321,&quot;loadEventStart&quot;:1470429012321,&quot;loadEventEnd&quot;:1470429012323,&quot;chromeFirstPaintTime&quot;:1470429011188},&quot;resources&quot;:[{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:813.98,&quot;domainLookupStart&quot;:813.98,&quot;domainLookupEnd&quot;:813.98,&quot;connectStart&quot;:813.98,&quot;connectEnd&quot;:813.98,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:814.2250000000001,&quot;responseStart&quot;:816.82,&quot;responseEnd&quot;:818.505,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-97ee2b56367da9956f50d3e491994a8e1bf773ac7a65b29a1e3bdcf8b3f2f29a.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:813.98,&quot;duration&quot;:4.524999999999977},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:814.0500000000001,&quot;domainLookupStart&quot;:814.0500000000001,&quot;domainLookupEnd&quot;:814.0500000000001,&quot;connectStart&quot;:814.0500000000001,&quot;connectEnd&quot;:814.0500000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:814.5150000000001,&quot;responseStart&quot;:816.815,&quot;responseEnd&quot;:818.8050000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-0264c6918a331ed8df89357faf8c0709ea6057c2a7976ee5272c0b1d56db1834.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:814.0500000000001,&quot;duration&quot;:4.7549999999999955},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:814.0900000000001,&quot;domainLookupStart&quot;:814.0900000000001,&quot;domainLookupEnd&quot;:814.0900000000001,&quot;connectStart&quot;:814.0900000000001,&quot;connectEnd&quot;:814.0900000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:814.815,&quot;responseStart&quot;:816.7700000000001,&quot;responseEnd&quot;:817.86,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/site-c31d97cdffdd1a140b356a16a2e2b37db7c98fa23ce2127f79a61bc338af1083.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:814.0900000000001,&quot;duration&quot;:3.769999999999868},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:814.2250000000001,&quot;domainLookupStart&quot;:814.2250000000001,&quot;domainLookupEnd&quot;:814.2250000000001,&quot;connectStart&quot;:814.2250000000001,&quot;connectEnd&quot;:814.2250000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:815.1650000000001,&quot;responseStart&quot;:816.7700000000001,&quot;responseEnd&quot;:818.8850000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:814.2250000000001,&quot;duration&quot;:4.659999999999968},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:814.2700000000001,&quot;domainLookupStart&quot;:814.2700000000001,&quot;domainLookupEnd&quot;:814.2700000000001,&quot;connectStart&quot;:814.2700000000001,&quot;connectEnd&quot;:814.2700000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:815.4250000000001,&quot;responseStart&quot;:816.7,&quot;responseEnd&quot;:819.64,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:814.2700000000001,&quot;duration&quot;:5.369999999999891},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:814.3100000000001,&quot;domainLookupStart&quot;:814.3100000000001,&quot;domainLookupEnd&quot;:814.3100000000001,&quot;connectStart&quot;:814.3100000000001,&quot;connectEnd&quot;:814.3100000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:815.605,&quot;responseStart&quot;:818.1500000000001,&quot;responseEnd&quot;:820.7700000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:814.3100000000001,&quot;duration&quot;:6.460000000000036},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:814.3450000000001,&quot;domainLookupStart&quot;:814.3450000000001,&quot;domainLookupEnd&quot;:814.3450000000001,&quot;connectStart&quot;:814.3450000000001,&quot;connectEnd&quot;:814.3450000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:816.9250000000001,&quot;responseStart&quot;:818.8550000000001,&quot;responseEnd&quot;:821.0550000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:814.3450000000001,&quot;duration&quot;:6.709999999999923},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1199.195,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:1541.4650000000001,&quot;name&quot;:&quot;https://www.google-analytics.com/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1199.195,&quot;duration&quot;:342.2700000000002},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1199.9650000000001,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2217.73,&quot;name&quot;:&quot;https://collector.githubapp.com/github/page_view?dimensions[page]=https%3A%2F%2Fgithub.com%2Flogin&amp;dimensions[title]=Sign%20in%20to%20GitHub%20%C2%B7%20GitHub&amp;dimensions[referrer]=https%3A%2F%2Fgithub.com%2F&amp;dimensions[user_agent]=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_11_6)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F52.0.2743.116%20Safari%2F537.36&amp;dimensions[screen_resolution]=1680x1050&amp;dimensions[pixel_ratio]=2&amp;dimensions[browser_resolution]=1463x883&amp;dimensions[tz_seconds]=10800&amp;dimensions[timestamp]=1470429011297&amp;dimensions[request_id]=4EACFBCF%3A1027%3AF8E6AC7%3A57A4F752&amp;&amp;measures[performance_timing]=1-8-6--1083-1082-1082-812-0-0-0---0---8-806-805-7-807-807&amp;&amp;&amp;dimensions[cid]=1993415879.1470429000&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1199.9650000000001,&quot;duration&quot;:1017.7649999999999}]}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/_private/browser/stats</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="154 /session" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="commit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">commit</stringProp>
                    <stringProp name="Argument.value">Sign+in</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="utf8" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">utf8</stringProp>
                    <stringProp name="Argument.value">%E2%9C%93</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authenticity_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authenticity_token</stringProp>
                    <stringProp name="Argument.value">${the_auth_token}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="login" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">login</stringProp>
                    <stringProp name="Argument.value">gokhansengun%40gmail.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="Argument.value">MyPassIsSecret</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/session</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="155 /" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="157 /github/page_view" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="dimensions[page]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[page]</stringProp>
                    <stringProp name="Argument.value">https://github.com/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[title]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[title]</stringProp>
                    <stringProp name="Argument.value">GitHub</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[referrer]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[referrer]</stringProp>
                    <stringProp name="Argument.value">https://github.com/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_agent]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_agent]</stringProp>
                    <stringProp name="Argument.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[screen_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[screen_resolution]</stringProp>
                    <stringProp name="Argument.value">1680x1050</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[pixel_ratio]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[pixel_ratio]</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[browser_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[browser_resolution]</stringProp>
                    <stringProp name="Argument.value">1463x883</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[tz_seconds]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[tz_seconds]</stringProp>
                    <stringProp name="Argument.value">10800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[timestamp]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[timestamp]</stringProp>
                    <stringProp name="Argument.value">1470429018356</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[request_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[request_id]</stringProp>
                    <stringProp name="Argument.value">4EACFBCF:1023:9161709:57A4F759</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="measures[performance_timing]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">measures[performance_timing]</stringProp>
                    <stringProp name="Argument.value">1-882-879--2088-2087-2087-1912-878-878-878---0-878-0-882-1907-1906-880-1908-1908</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_id]</stringProp>
                    <stringProp name="Argument.value">5166755</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_login]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_login]</stringProp>
                    <stringProp name="Argument.value">gokhansengun</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_hash]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_hash]</stringProp>
                    <stringProp name="Argument.value">bebfde71c13b1ba69a0eaf3f8d552af3e44ac25a5b0db37b782e1ec9b047fbff</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[cid]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[cid]</stringProp>
                    <stringProp name="Argument.value">1993415879.1470429000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">collector.githubapp.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/github/page_view</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="163 /_private/browser/stats" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;browserfeatures&quot;:{&quot;classlist_multi_arg&quot;:true,&quot;classlist&quot;:true,&quot;closest&quot;:true,&quot;custom_elements&quot;:true,&quot;custom_event&quot;:true,&quot;emoji&quot;:true,&quot;emoji_unicode_6&quot;:true,&quot;emoji_unicode_7&quot;:true,&quot;emoji_unicode_8&quot;:true,&quot;emoji_unicode_9&quot;:false,&quot;fetch&quot;:true,&quot;matches&quot;:true,&quot;performance_getentries&quot;:true,&quot;performance_mark&quot;:true,&quot;performance_now&quot;:true,&quot;promise&quot;:true,&quot;send_beacon&quot;:true,&quot;string_ends_with&quot;:true,&quot;string_starts_with&quot;:true,&quot;timezone&quot;:true,&quot;url&quot;:true,&quot;url_search_params&quot;:true,&quot;weakmap&quot;:true}},{&quot;timing&quot;:{&quot;crossBrowserLoadEvent&quot;:1470429019268,&quot;navigationStart&quot;:1470429016205,&quot;unloadEventStart&quot;:1470429018113,&quot;unloadEventEnd&quot;:1470429018113,&quot;redirectStart&quot;:1470429016205,&quot;redirectEnd&quot;:1470429017083,&quot;fetchStart&quot;:1470429017083,&quot;domainLookupStart&quot;:1470429017083,&quot;domainLookupEnd&quot;:1470429017083,&quot;connectStart&quot;:1470429017084,&quot;connectEnd&quot;:1470429017087,&quot;secureConnectionStart&quot;:1470429017085,&quot;requestStart&quot;:1470429017087,&quot;responseStart&quot;:1470429018111,&quot;responseEnd&quot;:1470429018112,&quot;domLoading&quot;:1470429018117,&quot;domInteractive&quot;:1470429018292,&quot;domContentLoadedEventStart&quot;:1470429018292,&quot;domContentLoadedEventEnd&quot;:1470429018293,&quot;domComplete&quot;:1470429019265,&quot;loadEventStart&quot;:1470429019265,&quot;loadEventEnd&quot;:1470429019266,&quot;chromeFirstPaintTime&quot;:1470429018298},&quot;resources&quot;:[{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1913.1350000000002,&quot;domainLookupStart&quot;:1913.1350000000002,&quot;domainLookupEnd&quot;:1913.1350000000002,&quot;connectStart&quot;:1913.1350000000002,&quot;connectEnd&quot;:1913.1350000000002,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1913.42,&quot;responseStart&quot;:1916.065,&quot;responseEnd&quot;:1918.785,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-97ee2b56367da9956f50d3e491994a8e1bf773ac7a65b29a1e3bdcf8b3f2f29a.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1913.1350000000002,&quot;duration&quot;:5.649999999999864},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1913.2200000000003,&quot;domainLookupStart&quot;:1913.2200000000003,&quot;domainLookupEnd&quot;:1913.2200000000003,&quot;connectStart&quot;:1913.2200000000003,&quot;connectEnd&quot;:1913.2200000000003,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1913.7100000000003,&quot;responseStart&quot;:1916.1800000000003,&quot;responseEnd&quot;:1919.2450000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-0264c6918a331ed8df89357faf8c0709ea6057c2a7976ee5272c0b1d56db1834.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1913.2200000000003,&quot;duration&quot;:6.024999999999864},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1913.285,&quot;domainLookupStart&quot;:1913.285,&quot;domainLookupEnd&quot;:1913.285,&quot;connectStart&quot;:1913.285,&quot;connectEnd&quot;:1913.285,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1914.0600000000002,&quot;responseStart&quot;:1916.2150000000001,&quot;responseEnd&quot;:1919.3650000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1913.285,&quot;duration&quot;:6.080000000000155},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1913.3600000000001,&quot;domainLookupStart&quot;:1913.3600000000001,&quot;domainLookupEnd&quot;:1913.3600000000001,&quot;connectStart&quot;:1913.3600000000001,&quot;connectEnd&quot;:1913.3600000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1914.4200000000003,&quot;responseStart&quot;:1916.13,&quot;responseEnd&quot;:1920.6000000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1913.3600000000001,&quot;duration&quot;:7.240000000000009},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1913.4450000000002,&quot;domainLookupStart&quot;:1913.4450000000002,&quot;domainLookupEnd&quot;:1913.4450000000002,&quot;connectStart&quot;:1914.91,&quot;connectEnd&quot;:1929.1350000000002,&quot;secureConnectionStart&quot;:1916.935,&quot;requestStart&quot;:1929.2000000000003,&quot;responseStart&quot;:2585.2650000000003,&quot;responseEnd&quot;:2586.895,&quot;name&quot;:&quot;https://avatars3.githubusercontent.com/u/5166755?v=3&amp;s=40&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1913.4450000000002,&quot;duration&quot;:673.4499999999998},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1914.4900000000002,&quot;domainLookupStart&quot;:1914.4900000000002,&quot;domainLookupEnd&quot;:1914.4900000000002,&quot;connectStart&quot;:1914.4900000000002,&quot;connectEnd&quot;:1914.4900000000002,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1915.5200000000002,&quot;responseStart&quot;:1919.2900000000002,&quot;responseEnd&quot;:1921.885,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1914.4900000000002,&quot;duration&quot;:7.394999999999754},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1914.5700000000002,&quot;domainLookupStart&quot;:1914.5700000000002,&quot;domainLookupEnd&quot;:1914.5700000000002,&quot;connectStart&quot;:1914.5700000000002,&quot;connectEnd&quot;:1914.5700000000002,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1918.6450000000002,&quot;responseStart&quot;:1920.1800000000003,&quot;responseEnd&quot;:1922.44,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1914.5700000000002,&quot;duration&quot;:7.869999999999891},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2155.5850000000005,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2492.0750000000003,&quot;name&quot;:&quot;https://www.google-analytics.com/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2155.5850000000005,&quot;duration&quot;:336.4899999999998},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2156.09,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:3059.425,&quot;name&quot;:&quot;https://collector.githubapp.com/github/page_view?dimensions[page]=https%3A%2F%2Fgithub.com%2F&amp;dimensions[title]=GitHub&amp;dimensions[referrer]=https%3A%2F%2Fgithub.com%2F&amp;dimensions[user_agent]=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_11_6)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F52.0.2743.116%20Safari%2F537.36&amp;dimensions[screen_resolution]=1680x1050&amp;dimensions[pixel_ratio]=2&amp;dimensions[browser_resolution]=1463x883&amp;dimensions[tz_seconds]=10800&amp;dimensions[timestamp]=1470429018356&amp;dimensions[request_id]=4EACFBCF%3A1023%3A9161709%3A57A4F759&amp;&amp;measures[performance_timing]=1-882-879--2088-2087-2087-1912-878-878-878---0-878-0-882-1907-1906-880-1908-1908&amp;&amp;dimensions[actor_id]=5166755&amp;dimensions[actor_login]=gokhansengun&amp;dimensions[actor_hash]=bebfde71c13b1ba69a0eaf3f8d552af3e44ac25a5b0db37b782e1ec9b047fbff&amp;dimensions[cid]=1993415879.1470429000&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2156.09,&quot;duration&quot;:903.335},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2166.59,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2502.1950000000006,&quot;name&quot;:&quot;https://www.google-analytics.com/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2166.59,&quot;duration&quot;:335.6050000000005},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2168.2400000000002,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2509.6600000000003,&quot;name&quot;:&quot;https://www.google-analytics.com/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2168.2400000000002,&quot;duration&quot;:341.4200000000001},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2170.215,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2523.84,&quot;name&quot;:&quot;https://www.google-analytics.com/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2170.215,&quot;duration&quot;:353.625}]}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/_private/browser/stats</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="166 /gokhansengun" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Auth Token Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">the_auth_token</stringProp>
                <stringProp name="RegexExtractor.regex">name=&quot;authenticity_token&quot;.*value=&quot;(.*?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">not-found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="171 /github/page_view" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="dimensions[page]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[page]</stringProp>
                    <stringProp name="Argument.value">https://github.com/gokhansengun</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[title]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[title]</stringProp>
                    <stringProp name="Argument.value">gokhansengun (GÃ¶khan ÅengÃ¼n)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[referrer]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[referrer]</stringProp>
                    <stringProp name="Argument.value">https://github.com/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_agent]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_agent]</stringProp>
                    <stringProp name="Argument.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[screen_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[screen_resolution]</stringProp>
                    <stringProp name="Argument.value">1680x1050</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[pixel_ratio]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[pixel_ratio]</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[browser_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[browser_resolution]</stringProp>
                    <stringProp name="Argument.value">1463x883</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[tz_seconds]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[tz_seconds]</stringProp>
                    <stringProp name="Argument.value">10800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[timestamp]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[timestamp]</stringProp>
                    <stringProp name="Argument.value">1470429022192</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[request_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[request_id]</stringProp>
                    <stringProp name="Argument.value">4EACFBCF:1023:9161974:57A4F75D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_id]</stringProp>
                    <stringProp name="Argument.value">5166755</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_login]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_login]</stringProp>
                    <stringProp name="Argument.value">gokhansengun</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="measures[performance_timing]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">measures[performance_timing]</stringProp>
                    <stringProp name="Argument.value">1-8-6--1232-1231-1231-1112-0-0-0---0---8-1100-1098-6-1100-1100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_id]</stringProp>
                    <stringProp name="Argument.value">5166755</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_login]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_login]</stringProp>
                    <stringProp name="Argument.value">gokhansengun</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_hash]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_hash]</stringProp>
                    <stringProp name="Argument.value">bebfde71c13b1ba69a0eaf3f8d552af3e44ac25a5b0db37b782e1ec9b047fbff</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[cid]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[cid]</stringProp>
                    <stringProp name="Argument.value">1993415879.1470429000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">collector.githubapp.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/github/page_view</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="173 /gokhansengun" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="tab" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tab</stringProp>
                    <stringProp name="Argument.value">repositories</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_pjax" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">_pjax</stringProp>
                    <stringProp name="Argument.value">#js-pjax-container</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-PJAX" elementType="Header">
                    <stringProp name="Header.name">X-PJAX</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="X-PJAX-Container" elementType="Header">
                    <stringProp name="Header.name">X-PJAX-Container</stringProp>
                    <stringProp name="Header.value">#js-pjax-container</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="174 /_private/browser/stats" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;browserfeatures&quot;:{&quot;classlist_multi_arg&quot;:true,&quot;classlist&quot;:true,&quot;closest&quot;:true,&quot;custom_elements&quot;:true,&quot;custom_event&quot;:true,&quot;emoji&quot;:true,&quot;emoji_unicode_6&quot;:true,&quot;emoji_unicode_7&quot;:true,&quot;emoji_unicode_8&quot;:true,&quot;emoji_unicode_9&quot;:false,&quot;fetch&quot;:true,&quot;matches&quot;:true,&quot;performance_getentries&quot;:true,&quot;performance_mark&quot;:true,&quot;performance_now&quot;:true,&quot;promise&quot;:true,&quot;send_beacon&quot;:true,&quot;string_ends_with&quot;:true,&quot;string_starts_with&quot;:true,&quot;timezone&quot;:true,&quot;url&quot;:true,&quot;url_search_params&quot;:true,&quot;weakmap&quot;:true}},{&quot;timing&quot;:{&quot;crossBrowserLoadEvent&quot;:1470429023111,&quot;navigationStart&quot;:1470429020801,&quot;unloadEventStart&quot;:1470429021901,&quot;unloadEventEnd&quot;:1470429021901,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1470429020801,&quot;domainLookupStart&quot;:1470429020801,&quot;domainLookupEnd&quot;:1470429020801,&quot;connectStart&quot;:1470429020807,&quot;connectEnd&quot;:1470429020809,&quot;secureConnectionStart&quot;:1470429020807,&quot;requestStart&quot;:1470429020809,&quot;responseStart&quot;:1470429021899,&quot;responseEnd&quot;:1470429021901,&quot;domLoading&quot;:1470429021913,&quot;domInteractive&quot;:1470429022032,&quot;domContentLoadedEventStart&quot;:1470429022032,&quot;domContentLoadedEventEnd&quot;:1470429022033,&quot;domComplete&quot;:1470429023109,&quot;loadEventStart&quot;:1470429023109,&quot;loadEventEnd&quot;:1470429023110,&quot;chromeFirstPaintTime&quot;:1470429021961},&quot;resources&quot;:[{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1114.66,&quot;domainLookupStart&quot;:1114.66,&quot;domainLookupEnd&quot;:1114.66,&quot;connectStart&quot;:1114.66,&quot;connectEnd&quot;:1114.66,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1115.25,&quot;responseStart&quot;:1119.5900000000001,&quot;responseEnd&quot;:1122.17,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-97ee2b56367da9956f50d3e491994a8e1bf773ac7a65b29a1e3bdcf8b3f2f29a.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1114.66,&quot;duration&quot;:7.509999999999991},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1114.795,&quot;domainLookupStart&quot;:1114.795,&quot;domainLookupEnd&quot;:1114.795,&quot;connectStart&quot;:1114.795,&quot;connectEnd&quot;:1114.795,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1115.64,&quot;responseStart&quot;:1119.585,&quot;responseEnd&quot;:1122.6200000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-0264c6918a331ed8df89357faf8c0709ea6057c2a7976ee5272c0b1d56db1834.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1114.795,&quot;duration&quot;:7.8250000000000455},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1114.875,&quot;domainLookupStart&quot;:1114.875,&quot;domainLookupEnd&quot;:1114.875,&quot;connectStart&quot;:1114.875,&quot;connectEnd&quot;:1114.875,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1116.1000000000001,&quot;responseStart&quot;:1119.4850000000001,&quot;responseEnd&quot;:1122.805,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1114.875,&quot;duration&quot;:7.930000000000064},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1114.94,&quot;domainLookupStart&quot;:1114.94,&quot;domainLookupEnd&quot;:1114.94,&quot;connectStart&quot;:1114.94,&quot;connectEnd&quot;:1114.94,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1116.8600000000001,&quot;responseStart&quot;:1119.68,&quot;responseEnd&quot;:1125.96,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1114.94,&quot;duration&quot;:11.019999999999982},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1115.07,&quot;domainLookupStart&quot;:1115.07,&quot;domainLookupEnd&quot;:1115.07,&quot;connectStart&quot;:1115.07,&quot;connectEnd&quot;:1115.07,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1117.4350000000002,&quot;responseStart&quot;:1119.8400000000001,&quot;responseEnd&quot;:1121.97,&quot;name&quot;:&quot;https://avatars3.githubusercontent.com/u/5166755?v=3&amp;s=40&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1115.07,&quot;duration&quot;:6.900000000000091},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1115.14,&quot;domainLookupStart&quot;:1115.14,&quot;domainLookupEnd&quot;:1115.14,&quot;connectStart&quot;:1121.325,&quot;connectEnd&quot;:1156.3000000000002,&quot;secureConnectionStart&quot;:1123.595,&quot;requestStart&quot;:1156.365,&quot;responseStart&quot;:1676.9750000000001,&quot;responseEnd&quot;:1679.4150000000002,&quot;name&quot;:&quot;https://avatars2.githubusercontent.com/u/5166755?v=3&amp;s=460&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1115.14,&quot;duration&quot;:564.2750000000001},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1116.56,&quot;domainLookupStart&quot;:1116.56,&quot;domainLookupEnd&quot;:1116.56,&quot;connectStart&quot;:1122.68,&quot;connectEnd&quot;:1133.2250000000001,&quot;secureConnectionStart&quot;:1124.395,&quot;requestStart&quot;:1133.295,&quot;responseStart&quot;:1743.4650000000001,&quot;responseEnd&quot;:1745.2350000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/spinners/octocat-spinner-128.gif&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1116.56,&quot;duration&quot;:628.6750000000002},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1116.6450000000002,&quot;domainLookupStart&quot;:1116.6450000000002,&quot;domainLookupEnd&quot;:1116.6450000000002,&quot;connectStart&quot;:1122.4650000000001,&quot;connectEnd&quot;:1135.2250000000001,&quot;secureConnectionStart&quot;:1124.3400000000001,&quot;requestStart&quot;:1135.305,&quot;responseStart&quot;:1662.7050000000002,&quot;responseEnd&quot;:1664.7200000000003,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1116.6450000000002,&quot;duration&quot;:548.075},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1116.74,&quot;domainLookupStart&quot;:1116.74,&quot;domainLookupEnd&quot;:1116.74,&quot;connectStart&quot;:1116.74,&quot;connectEnd&quot;:1116.74,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1118.4550000000002,&quot;responseStart&quot;:1123.355,&quot;responseEnd&quot;:1127.39,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1116.74,&quot;duration&quot;:10.650000000000091},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1116.805,&quot;domainLookupStart&quot;:1116.805,&quot;domainLookupEnd&quot;:1116.805,&quot;connectStart&quot;:1116.805,&quot;connectEnd&quot;:1116.805,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1120.295,&quot;responseStart&quot;:1125.405,&quot;responseEnd&quot;:1127.7050000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1116.805,&quot;duration&quot;:10.900000000000091},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1394.7050000000002,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:1737.9850000000001,&quot;name&quot;:&quot;https://www.google-analytics.com/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1394.7050000000002,&quot;duration&quot;:343.28},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1395.27,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2307.6700000000005,&quot;name&quot;:&quot;https://collector.githubapp.com/github/page_view?dimensions[page]=https%3A%2F%2Fgithub.com%2Fgokhansengun&amp;dimensions[title]=gokhansengun%20(G%C3%B6khan%20%C5%9Eeng%C3%BCn)&amp;dimensions[referrer]=https%3A%2F%2Fgithub.com%2F&amp;dimensions[user_agent]=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_11_6)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F52.0.2743.116%20Safari%2F537.36&amp;dimensions[screen_resolution]=1680x1050&amp;dimensions[pixel_ratio]=2&amp;dimensions[browser_resolution]=1463x883&amp;dimensions[tz_seconds]=10800&amp;dimensions[timestamp]=1470429022192&amp;dimensions[request_id]=4EACFBCF%3A1023%3A9161974%3A57A4F75D&amp;dimensions[user_id]=5166755&amp;dimensions[user_login]=gokhansengun&amp;&amp;measures[performance_timing]=1-8-6--1232-1231-1231-1112-0-0-0---0---8-1100-1098-6-1100-1100&amp;&amp;dimensions[actor_id]=5166755&amp;dimensions[actor_login]=gokhansengun&amp;dimensions[actor_hash]=bebfde71c13b1ba69a0eaf3f8d552af3e44ac25a5b0db37b782e1ec9b047fbff&amp;dimensions[cid]=1993415879.1470429000&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1395.27,&quot;duration&quot;:912.4000000000005}]}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/_private/browser/stats</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="179 /gokhansengun/Mono-Linux-Interop/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/Mono-Linux-Interop/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="177 /gokhansengun/Owin-Web-Api-on-Raspberry-Pi-3/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/Owin-Web-Api-on-Raspberry-Pi-3/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="176 /gokhansengun/gokhansengun.github.io/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/gokhansengun.github.io/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="183 /_private/browser/stats" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;pjax&quot;:{&quot;url&quot;:&quot;https://github.com/gokhansengun?tab=repositories&quot;,&quot;ms&quot;:929}}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/_private/browser/stats</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="175 /gokhansengun/CI-Jenkins-Mono/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/CI-Jenkins-Mono/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="180 /gokhansengun/Docker-DB-Seed-Sample/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/Docker-DB-Seed-Sample/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="178 /gokhansengun/Owin-Sync-vs-Async-Perf-Test/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/Owin-Sync-vs-Async-Perf-Test/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="181 /github/page_view" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="dimensions[page]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[page]</stringProp>
                    <stringProp name="Argument.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[title]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[title]</stringProp>
                    <stringProp name="Argument.value">gokhansengun (GÃ¶khan ÅengÃ¼n)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[referrer]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[referrer]</stringProp>
                    <stringProp name="Argument.value">https://github.com/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_agent]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_agent]</stringProp>
                    <stringProp name="Argument.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[screen_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[screen_resolution]</stringProp>
                    <stringProp name="Argument.value">1680x1050</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[pixel_ratio]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[pixel_ratio]</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[browser_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[browser_resolution]</stringProp>
                    <stringProp name="Argument.value">1463x883</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[tz_seconds]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[tz_seconds]</stringProp>
                    <stringProp name="Argument.value">10800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[timestamp]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[timestamp]</stringProp>
                    <stringProp name="Argument.value">1470429023988</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[request_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[request_id]</stringProp>
                    <stringProp name="Argument.value">4EACFBCF:1023:9161974:57A4F75D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_id]</stringProp>
                    <stringProp name="Argument.value">5166755</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[user_login]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_login]</stringProp>
                    <stringProp name="Argument.value">gokhansengun</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_id]</stringProp>
                    <stringProp name="Argument.value">5166755</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_login]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_login]</stringProp>
                    <stringProp name="Argument.value">gokhansengun</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[actor_hash]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[actor_hash]</stringProp>
                    <stringProp name="Argument.value">bebfde71c13b1ba69a0eaf3f8d552af3e44ac25a5b0db37b782e1ec9b047fbff</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="dimensions[cid]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[cid]</stringProp>
                    <stringProp name="Argument.value">1993415879.1470429000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">collector.githubapp.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/github/page_view</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="184 /gokhansengun/Gulp-Sample/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/Gulp-Sample/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="185 /gokhansengun/SignalR-Sample/graphs/participation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="h" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">h</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="w" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">w</stringProp>
                    <stringProp name="Argument.value">640</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/gokhansengun/SignalR-Sample/graphs/participation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="188 /logout" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="utf8" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">utf8</stringProp>
                    <stringProp name="Argument.value">%E2%9C%93</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="authenticity_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">authenticity_token</stringProp>
                    <stringProp name="Argument.value">${the_auth_token}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/logout</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="190 /" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="192 /github/page_view" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="dimensions[page]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[page]</stringProp>
                    <stringProp name="Argument.value">https://github.com/</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[title]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[title]</stringProp>
                    <stringProp name="Argument.value">How people build software Â· GitHub</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[referrer]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[referrer]</stringProp>
                    <stringProp name="Argument.value">https://github.com/gokhansengun?tab=repositories</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[user_agent]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[user_agent]</stringProp>
                    <stringProp name="Argument.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[screen_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[screen_resolution]</stringProp>
                    <stringProp name="Argument.value">1680x1050</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[pixel_ratio]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[pixel_ratio]</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[browser_resolution]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[browser_resolution]</stringProp>
                    <stringProp name="Argument.value">1463x883</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[tz_seconds]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[tz_seconds]</stringProp>
                    <stringProp name="Argument.value">10800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[timestamp]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[timestamp]</stringProp>
                    <stringProp name="Argument.value">1470429028354</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[request_id]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[request_id]</stringProp>
                    <stringProp name="Argument.value">4EACFBCF:1028:C849D98:57A4F763</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="measures[performance_timing]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">measures[performance_timing]</stringProp>
                    <stringProp name="Argument.value">1-847-845--1765-1764-1764-1649-844-844-844---0-844-0-847-1643-1642-846-1644-1644</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dimensions[cid]" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">dimensions[cid]</stringProp>
                    <stringProp name="Argument.value">1993415879.1470429000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">collector.githubapp.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/github/page_view</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, sdch, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="193 /_private/browser/stats" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;browserfeatures&quot;:{&quot;classlist_multi_arg&quot;:true,&quot;classlist&quot;:true,&quot;closest&quot;:true,&quot;custom_elements&quot;:true,&quot;custom_event&quot;:true,&quot;emoji&quot;:true,&quot;emoji_unicode_6&quot;:true,&quot;emoji_unicode_7&quot;:true,&quot;emoji_unicode_8&quot;:true,&quot;emoji_unicode_9&quot;:false,&quot;fetch&quot;:true,&quot;matches&quot;:true,&quot;performance_getentries&quot;:true,&quot;performance_mark&quot;:true,&quot;performance_now&quot;:true,&quot;promise&quot;:true,&quot;send_beacon&quot;:true,&quot;string_ends_with&quot;:true,&quot;string_starts_with&quot;:true,&quot;timezone&quot;:true,&quot;url&quot;:true,&quot;url_search_params&quot;:true,&quot;weakmap&quot;:true}},{&quot;downloadedbundles&quot;:[&quot;site.css&quot;]},{&quot;timing&quot;:{&quot;crossBrowserLoadEvent&quot;:1470429029326,&quot;navigationStart&quot;:1470429026516,&quot;unloadEventStart&quot;:1470429028160,&quot;unloadEventEnd&quot;:1470429028160,&quot;redirectStart&quot;:1470429026516,&quot;redirectEnd&quot;:1470429027360,&quot;fetchStart&quot;:1470429027360,&quot;domainLookupStart&quot;:1470429027360,&quot;domainLookupEnd&quot;:1470429027360,&quot;connectStart&quot;:1470429027361,&quot;connectEnd&quot;:1470429027363,&quot;secureConnectionStart&quot;:1470429027362,&quot;requestStart&quot;:1470429027363,&quot;responseStart&quot;:1470429028158,&quot;responseEnd&quot;:1470429028159,&quot;domLoading&quot;:1470429028165,&quot;domInteractive&quot;:1470429028280,&quot;domContentLoadedEventStart&quot;:1470429028280,&quot;domContentLoadedEventEnd&quot;:1470429028281,&quot;domComplete&quot;:1470429029323,&quot;loadEventStart&quot;:1470429029323,&quot;loadEventEnd&quot;:1470429029325,&quot;chromeFirstPaintTime&quot;:1470429028302},&quot;resources&quot;:[{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1650.1750000000002,&quot;domainLookupStart&quot;:1650.1750000000002,&quot;domainLookupEnd&quot;:1650.1750000000002,&quot;connectStart&quot;:1650.1750000000002,&quot;connectEnd&quot;:1650.1750000000002,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1650.5,&quot;responseStart&quot;:1653.48,&quot;responseEnd&quot;:1656.26,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-97ee2b56367da9956f50d3e491994a8e1bf773ac7a65b29a1e3bdcf8b3f2f29a.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1650.1750000000002,&quot;duration&quot;:6.084999999999809},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1650.29,&quot;domainLookupStart&quot;:1650.29,&quot;domainLookupEnd&quot;:1650.29,&quot;connectStart&quot;:1650.29,&quot;connectEnd&quot;:1650.29,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1650.73,&quot;responseStart&quot;:1653.8950000000002,&quot;responseEnd&quot;:1656.6450000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-0264c6918a331ed8df89357faf8c0709ea6057c2a7976ee5272c0b1d56db1834.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1650.29,&quot;duration&quot;:6.355000000000246},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1650.3700000000001,&quot;domainLookupStart&quot;:1650.3700000000001,&quot;domainLookupEnd&quot;:1650.3700000000001,&quot;connectStart&quot;:1650.3700000000001,&quot;connectEnd&quot;:1650.3700000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1651.0200000000002,&quot;responseStart&quot;:1653.9250000000002,&quot;responseEnd&quot;:1655.265,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/site-c31d97cdffdd1a140b356a16a2e2b37db7c98fa23ce2127f79a61bc338af1083.css&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1650.3700000000001,&quot;duration&quot;:4.894999999999982},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1650.44,&quot;domainLookupStart&quot;:1650.44,&quot;domainLookupEnd&quot;:1650.44,&quot;connectStart&quot;:1650.44,&quot;connectEnd&quot;:1650.44,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1651.415,&quot;responseStart&quot;:1653.7700000000002,&quot;responseEnd&quot;:1656.7600000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1650.44,&quot;duration&quot;:6.320000000000164},{&quot;initiatorType&quot;:&quot;link&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1650.505,&quot;domainLookupStart&quot;:1650.505,&quot;domainLookupEnd&quot;:1650.505,&quot;connectStart&quot;:1650.505,&quot;connectEnd&quot;:1650.505,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1651.6550000000002,&quot;responseStart&quot;:1653.7050000000002,&quot;responseEnd&quot;:1660.9450000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1650.505,&quot;duration&quot;:10.440000000000055},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1650.565,&quot;domainLookupStart&quot;:1650.565,&quot;domainLookupEnd&quot;:1650.565,&quot;connectStart&quot;:1650.565,&quot;connectEnd&quot;:1650.565,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1652.2250000000001,&quot;responseStart&quot;:1654.1200000000001,&quot;responseEnd&quot;:1655.5900000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/universe-logo.png&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1650.565,&quot;duration&quot;:5.025000000000091},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1651.5750000000003,&quot;domainLookupStart&quot;:1651.5750000000003,&quot;domainLookupEnd&quot;:1651.5750000000003,&quot;connectStart&quot;:1651.5750000000003,&quot;connectEnd&quot;:1651.5750000000003,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1656.085,&quot;responseStart&quot;:1657.8950000000002,&quot;responseEnd&quot;:1659.1550000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-build.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1651.5750000000003,&quot;duration&quot;:7.579999999999927},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1651.63,&quot;domainLookupStart&quot;:1651.63,&quot;domainLookupEnd&quot;:1651.63,&quot;connectStart&quot;:1651.63,&quot;connectEnd&quot;:1651.63,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1656.6000000000001,&quot;responseStart&quot;:1658.265,&quot;responseEnd&quot;:1659.4350000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-work.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1651.63,&quot;duration&quot;:7.805000000000064},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1651.6750000000002,&quot;domainLookupStart&quot;:1651.6750000000002,&quot;domainLookupEnd&quot;:1651.6750000000002,&quot;connectStart&quot;:1651.6750000000002,&quot;connectEnd&quot;:1651.6750000000002,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1657.4450000000002,&quot;responseStart&quot;:1658.565,&quot;responseEnd&quot;:1659.8100000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-projects.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1651.6750000000002,&quot;duration&quot;:8.134999999999991},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1651.7100000000003,&quot;domainLookupStart&quot;:1651.7100000000003,&quot;domainLookupEnd&quot;:1651.7100000000003,&quot;connectStart&quot;:1651.7100000000003,&quot;connectEnd&quot;:1651.7100000000003,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1659.04,&quot;responseStart&quot;:1659.9350000000002,&quot;responseEnd&quot;:1661.1550000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-ill-platform.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1651.7100000000003,&quot;duration&quot;:9.444999999999936},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1651.7400000000002,&quot;domainLookupStart&quot;:1651.7400000000002,&quot;domainLookupEnd&quot;:1651.7400000000002,&quot;connectStart&quot;:1651.7400000000002,&quot;connectEnd&quot;:1651.7400000000002,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1659.51,&quot;responseStart&quot;:1660.1200000000001,&quot;responseEnd&quot;:1662.2100000000003,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/org_example_nasa.png?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1651.7400000000002,&quot;duration&quot;:10.470000000000027},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1651.795,&quot;domainLookupStart&quot;:1651.795,&quot;domainLookupEnd&quot;:1651.795,&quot;connectStart&quot;:1651.795,&quot;connectEnd&quot;:1651.795,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1653.01,&quot;responseStart&quot;:1657.07,&quot;responseEnd&quot;:1662.5900000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/frameworks-952d14ac162c6f6f327175882f6b1a4645bf7aadc9b36ccd52d50fc6f34c8568.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1651.795,&quot;duration&quot;:10.795000000000073},{&quot;initiatorType&quot;:&quot;script&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1651.8400000000001,&quot;domainLookupStart&quot;:1651.8400000000001,&quot;domainLookupEnd&quot;:1651.8400000000001,&quot;connectStart&quot;:1651.8400000000001,&quot;connectEnd&quot;:1651.8400000000001,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1654.6900000000003,&quot;responseStart&quot;:1660.56,&quot;responseEnd&quot;:1662.88,&quot;name&quot;:&quot;https://assets-cdn.github.com/assets/github-2abf2f59db08cd7f12c8c1b84d25f77fbe0abe9a65d253308185b4cdb5b4c5ca.js&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1651.8400000000001,&quot;duration&quot;:11.039999999999964},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1691.88,&quot;domainLookupStart&quot;:1691.88,&quot;domainLookupEnd&quot;:1691.88,&quot;connectStart&quot;:1691.88,&quot;connectEnd&quot;:1691.88,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1692.2250000000001,&quot;responseStart&quot;:1693.065,&quot;responseEnd&quot;:1693.3500000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/static/fonts/roboto/roboto-regular.woff&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1691.88,&quot;duration&quot;:1.4700000000000273},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1692.17,&quot;domainLookupStart&quot;:1692.17,&quot;domainLookupEnd&quot;:1692.17,&quot;connectStart&quot;:1692.17,&quot;connectEnd&quot;:1692.17,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1692.595,&quot;responseStart&quot;:1694.16,&quot;responseEnd&quot;:1694.5400000000002,&quot;name&quot;:&quot;https://assets-cdn.github.com/static/fonts/roboto/roboto-medium.woff&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1692.17,&quot;duration&quot;:2.3700000000001182},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1692.63,&quot;domainLookupStart&quot;:1692.63,&quot;domainLookupEnd&quot;:1692.63,&quot;connectStart&quot;:1692.63,&quot;connectEnd&quot;:1692.63,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1693.2800000000002,&quot;responseStart&quot;:1694.23,&quot;responseEnd&quot;:1695.15,&quot;name&quot;:&quot;https://assets-cdn.github.com/images/modules/site/home-hero.jpg?sn&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1692.63,&quot;duration&quot;:2.519999999999982},{&quot;initiatorType&quot;:&quot;css&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1692.7550000000003,&quot;domainLookupStart&quot;:1692.7550000000003,&quot;domainLookupEnd&quot;:1692.7550000000003,&quot;connectStart&quot;:1692.7550000000003,&quot;connectEnd&quot;:1692.7550000000003,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:1693.515,&quot;responseStart&quot;:1694.2150000000001,&quot;responseEnd&quot;:1694.9850000000001,&quot;name&quot;:&quot;https://assets-cdn.github.com/static/fonts/roboto/roboto-light.woff&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1692.7550000000003,&quot;duration&quot;:2.229999999999791},{&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1848.2800000000002,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2182.69,&quot;name&quot;:&quot;https://www.google-analytics.com/collect&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1848.2800000000002,&quot;duration&quot;:334.40999999999985},{&quot;initiatorType&quot;:&quot;img&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1849.1700000000003,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:2806.8,&quot;name&quot;:&quot;https://collector.githubapp.com/github/page_view?dimensions[page]=https%3A%2F%2Fgithub.com%2F&amp;dimensions[title]=How%20people%20build%20software%20%C2%B7%20GitHub&amp;dimensions[referrer]=https%3A%2F%2Fgithub.com%2Fgokhansengun%3Ftab%3Drepositories&amp;dimensions[user_agent]=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_11_6)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F52.0.2743.116%20Safari%2F537.36&amp;dimensions[screen_resolution]=1680x1050&amp;dimensions[pixel_ratio]=2&amp;dimensions[browser_resolution]=1463x883&amp;dimensions[tz_seconds]=10800&amp;dimensions[timestamp]=1470429028354&amp;dimensions[request_id]=4EACFBCF%3A1028%3AC849D98%3A57A4F763&amp;&amp;measures[performance_timing]=1-847-845--1765-1764-1764-1649-844-844-844---0-844-0-847-1643-1642-846-1644-1644&amp;&amp;&amp;dimensions[cid]=1993415879.1470429000&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1849.1700000000003,&quot;duration&quot;:957.6299999999999}]}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.github.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/_private/browser/stats</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://github.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.8,tr;q=0.6,de;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://github.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1409425616">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff)</stringProp>
          <stringProp name="-2135475220">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff)[\?;].*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list">
          <stringProp name="-588855058">.*github.com.*</stringProp>
        </collectionProp>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">true</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">true</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
